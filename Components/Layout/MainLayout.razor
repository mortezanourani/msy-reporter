@inherits LayoutComponentBase
@inject IJSRuntime JSRuntime

<main class="main">
    <div class="container">
        <nav class="side-navbar">
            <div class="app-title">
                <span class="material-symbols-rounded">rewarded_ads</span>
                <div>
                    <p>سامانه جامع آماری</p>
                    <p>ورزش و جوانان گیلان</p>
                </div>
            </div>
            <ul class="nav nav-pills flex-column">
                <li class="nav-item">
                    <NavLink href="/" Match="NavLinkMatch.All">
                        <span class="material-symbols-rounded">browse</span>
                        پنل کاربری
                    </NavLink>
                </li>
                <li class="nav-item">
                    <NavLink href="/Projects">
                        <span class="material-symbols-rounded">construction</span>
                        پروژه های عمرانی
                    </NavLink>
                </li>
                <li class="nav-item">
                    <NavLink href="/SportFacilities">
                        <span class="material-symbols-rounded">gite</span>
                        اماکن ورزشی
                    </NavLink>
                </li>
                <li class="nav-item">
                    <NavLink href="/Federations">
                        <span class="material-symbols-rounded">groups</span>
                        هیات های ورزشی
                    </NavLink>
                </li>
                <li class="nav-item">
                    <NavLink href="/Champions">
                        <span class="material-symbols-rounded">trophy</span>
                        مدال آوران
                    </NavLink>
                </li>
                <li class="nav-item">
                    <NavLink href="/Youth">
                        <span class="material-symbols-rounded">wc</span>
                        امور جوانان
                    </NavLink>
                </li>
            </ul>
        </nav>

        <div class="content">
            <nav class="top-navbar @scrolledClass">
                <div class="wrapper">
                    @*
                    <form class="tn-search">
                        <input type="text" name="search" placeholder="جستجو..." />
                    </form>
                    *@
                    <ul class="nav align-items-center">
                        @*
                        <li class="nav-item">
                            <a href="/Account/Manage" class="btn-settings">
                                <span class="material-symbols-rounded">apps</span>
                            </a>
                        </li>
                        *@
                        <li class="nav-item">
                            <a href="/Account/SignOut" class="btn-signout">
                                <span class="material-symbols-rounded">mode_off_on</span>
                            </a>
                        </li>
                    </ul>
                </div>
            </nav>
            @Body
        </div>
    </div>
</main>

<div id="error-ui">
    An unhandled error has occurred.
    <a href="" class="reload">Reload</a>
    <a class="dismiss">🗙</a>
</div>

<script>
    window.scrollHelper = {
        onScroll: function (dotNetHelper) {
            window.addEventListener('scroll', () => {
                dotNetHelper.invokeMethodAsync('OnScroll', window.scrollY);
            });
        }
    };
</script>

@code {
    private string? scrolledClass;

    private DotNetObjectReference<MainLayout>? dotNetHelper;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            dotNetHelper = DotNetObjectReference.Create(this);
            await JSRuntime.InvokeVoidAsync("scrollHelper.onScroll", dotNetHelper);
        }
    }

    [JSInvokable]
    public void OnScroll(int position)
    {
        scrolledClass = (position > 0) ? "scrolled" : string.Empty;
        StateHasChanged();
    }

    public void Dispose()
    {
        dotNetHelper?.Dispose();
    }
}