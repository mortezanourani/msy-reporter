@using Microsoft.AspNetCore.Components.QuickGrid

<div class="card city-projects-card">
    <div class="card-header pb-0">
        <h6 class="title">پروژه های نیمه تمام @City!.PersianName</h6>
    </div>
    <div class="card-body">
        <div class="projects-list">
            @if(projects is not null)
            {
                <QuickGrid Items="projects" Theme="" Class="projects-table">
                    <PropertyColumn Sortable="true" Title="عنوان پروژه" Property="@(project => project.Title)" />
                    <PropertyColumn Sortable="true" Title="شهرستان" Property="@(project => project.City.PersianName)" />
                    @* <PropertyColumn Sortable="true" Title="موقعیت" Property="@(project => project.IsRural == true ? "روستایی" : "شهری")" /> *@
                    @* <PropertyColumn Sortable="true" Title="نوع فعالیت" Property="@(project => project!.Type!.PersianTitle)" /> *@
                    @* <PropertyColumn Sortable="true" Title="نوع پروژه" Property="@(project => project.Type.PersianTitle)" /> *@
                    <PropertyColumn Sortable="true" Title="سال آغاز" Property="@(project => project.Year)" />
                    <PropertyColumn Title="پیشرفت فیزیکی" Property="@(project => string.Format("%{0}", project.ProjectProgresses!.Max(progress => progress.Percentage)))" />
                    <TemplateColumn>
                        <a class="info-link" href="/Project/@context.Id">
                            <span class="material-symbols-rounded">info</span>
                        </a>
                    </TemplateColumn>
                </QuickGrid>
            }
        </div>
    </div>
    <div class="card-footer pt-0">
        <NavLink href="/Projects/List">تمامی پروژه های سال جاری @City!.PersianName</NavLink>
    </div>
</div>

@code {
    [Parameter]
    public City? City { get; set; }

    private AppDbContext context = default!;
    private IQueryable<ConstructionProject>? projects;

    protected override void OnInitialized()
    {
        context = DbFactory.CreateDbContext();
    }

    protected override void OnParametersSet()
    {
        projects = context.ConstructionProjects
            .Include(project => project.City)
            .Include(project => project.Type)
            .Include(project => project.ProjectProgresses)
            .Where(project => project.ProjectProgresses
                .Max(progress => progress.Percentage) < 100);

        if (City!.Id != 0)
        {
            projects = projects
                .Where(m => m.City.Id == City.Id);
        }
    }
}
