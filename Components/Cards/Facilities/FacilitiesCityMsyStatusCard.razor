@if (CityId is null || TotalCount is null)
{
    <Loading CardMode=true />
}
else
{
    <div class="card">
        <div class="card-header pb-0">
            <h6>اماکن ورزشی وزارت ورزش</h6>
        </div>
        <div class="card-body">
            <h6 class="display-6 total">@TotalCount</h6>
            <div class="details">
                <div class="detail">
                    <p>دارای سند</p>
                    <p>@DocumentsCount</p>
                </div>
                <div class="detail">
                    <p>فاقد سند</p>
                    <p>@(TotalCount - DocumentsCount)</p>
                </div>
                <div class="detail">
                    <p>سند تک برگ</p>
                    <p>@NewDocumentsCount</p>
                </div>
                <div class="detail">
                    <p>سند دفترچه ای</p>
                    <p>@(DocumentsCount - NewDocumentsCount)</p>
                </div>
            </div>
        </div>
    </div>
}

@code {
    [Parameter]
    public int? CityId { get; set; }

    private AppDbContext context = default!;

    private int? TotalCount = null!;
    private int? DocumentsCount = null!;
    private int? NewDocumentsCount = null!;

    protected override async Task OnParametersSetAsync()
    {
        context = DbFactory.CreateDbContext();

        var facilities = await context.Facilities
            .Include(f => f.FacilityDocuments)
            .Where(f => f.CityId == CityId!)
            .ToListAsync();

        TotalCount = facilities.Count();

        DocumentsCount = facilities
            .Where(f => f.FacilityDocuments.Any())
            .Count();

        NewDocumentsCount = facilities
            .Where(f => f.FacilityDocuments
                .Any(d => d.IsNew))
            .Count();
    }
}
