@using Microsoft.AspNetCore.Components.QuickGrid

@rendermode InteractiveServer

@if (FederationChampions is null)
{
	<Loading CardMode=true />
}
else
{
	<div class="card list-card mt-3">
		<div class="card-header">
			<h6 class="display-6">خلاصه وضعیت قهرمانان در سال @Year به تفکیک هیات های ورزشی</h6>
		</div>
		<div class="card-body pb-0">
			<div class="table-wrapper">
				<QuickGrid Items="FederationChampions!.AsQueryable()" Theme="" Class="quickgrid-table">
					<PropertyColumn Title="هیات ورزشی" Property="@(m => m.Select(g => g.Tournament.Federation.PersianName).FirstOrDefault())" />
					<PropertyColumn Title="مدال آوران آقا" Property="@(m => m.Where(g => g.Athlete.GenderId == 1).GroupBy(g => g.AthleteId).Count())" />
					<PropertyColumn Title="مدال آوران بانوان" Property="@(m => m.Where(g => g.Athlete.GenderId == 2).GroupBy(g => g.AthleteId).Count())" />
					<PropertyColumn Title="مجموع مدال آوران" Property="@(m => m.GroupBy(g => g.AthleteId).Count())" />
					<PropertyColumn Title="مدال های آقایان" Property="@(m => m.Where(g => g.Athlete.GenderId == 1).Sum(g => g.MedalsCount))" />
					<PropertyColumn Title="مدال های بانوان" Property="@(m => m.Where(g => g.Athlete.GenderId == 2).Sum(g => g.MedalsCount))" />
					<PropertyColumn Title="مجموع مدال ها" Property="@(m => m.Sum(g => g.MedalsCount))" />
				</QuickGrid>
			</div>
		</div>
	</div>
}

@code {
	[Parameter]
	public int? Year { get; set; } = null!;

	private AppDbContext context = default!;

	private List<IGrouping<int, Champion>>? FederationChampions = null!;

	protected override async Task OnInitializedAsync()
	{
		context = DbFactory.CreateDbContext();

		// Federations = await context.Federations
		// 	.Include(federation => federation.Tournaments)
		// 		.ThenInclude(tournament => tournament.Champions)
		// 	.Where(federation => federation.Tournaments
		// 		.Any(tournament =>
		// 			tournament.Year == Year
		// 			&&
		// 			tournament.Champions.Count(champion => champion.Medal != null) > 0))
		// 	.Where(federation => federation.IsChampionship)
		// 	.OrderBy(federation => federation.PersianName)
		// 	.ToListAsync();

		await OnParametersSetAsync();
	}

	protected override async Task OnParametersSetAsync()
	{
		FederationChampions = await context.Champions
			.Include(m => m.Tournament)
				.ThenInclude(m => m.Federation)
			.Include(m => m.Athlete)
			.Where(m => m.Tournament.Year == Year)
			.Where(m => m.MedalsCount > 0)
			.GroupBy(m => m.Tournament.FederationId)
			.ToListAsync();
	}
}
