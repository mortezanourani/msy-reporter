
<div class="card color-card">
    <div class="card-header">
        <h6 class="title">پروژه های بالای 70 درصد پیشرفت فیزیکی</h6>
    </div>
    <div class="card-body">
        <div class="count-bars">
           @foreach (ConstructionProject project in projects)
            {
                <span class="count-bar" style="height: @project.ProjectProgresses.Max(m => m.Percentage)%;" @onmouseover="() => UpdateProject(project)"></span>
            }
        </div>
        <div class="card-footer project-info">
            <div>
                <h6 class="project-title">پروژه @projectTitle</h6>
                <p class="project-city">شهرستان @projectCity</p>
            </div>
            <div>
                <p class="project-start">تاریخ شروع پروژه: <b>@projectStart</b></p>
                <p class="project-progress">درصد پیشرفت فیزیکی: <b>%@projectProgress</b></p>
            </div>
        </div>
    </div>
</div>

@code {
    private AppDbContext context = default!;

    private ICollection<ConstructionProject> projects;
    private string projectTitle = string.Empty;
    private string projectCity = string.Empty;
    private int projectStart = 0;
    private int projectProgress = 0;

    private List<string> percents = new List<string>();

    protected override void OnInitialized()
    {
        base.OnInitialized();

        context = DbFactory.CreateDbContext();

        projects = context.ConstructionProjects
            .Include(m => m.City)
            .Include(m => m.ProjectProgresses)
            .OrderBy(m => m.Title)
            .Where(m => m.ProjectProgresses
                .Where(m => m.Percentage >= 70).Count() > 0)
            .ToList();

        UpdateProject(projects.First());
    }

    private void UpdateProject(ConstructionProject project)
    {
        projectTitle = project.Title;
        projectCity = project.City.PersianName;
        projectStart = project.Year;
        projectProgress = project.ProjectProgresses
            .Max(m => m.Percentage);
    }
}
