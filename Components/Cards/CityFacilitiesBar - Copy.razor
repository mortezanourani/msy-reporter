<div class="city-facilities-bar">
    <div class="city-name">
        <h6 class="name">@City?.PersianName</h6>
        <p class="total">@totalFacilities</p>
    </div>
    <div class="bar" style="background-image: linear-gradient(-90deg, #2c7be5 0%, #2c7be5 @msyFacilitiesPercent%, transparent @msyFacilitiesPercent%), linear-gradient(-90deg, #94bcf1 0%, #94bcf1 @(100 - privateFacilitiesPercent)%, transparent @(100 - privateFacilitiesPercent)%);">
        <div style="width: @msyFacilitiesPercent%">
            <p class="msy">@msyFacilities</p>
        </div>
        <div style="width: @govFacilitiesPercent%">
            <p class="gov">@govFacilities</p>
        </div>
        <div style="width: @privateFacilitiesPercent%">
            <p class="private">@privateFacilities</p>
        </div>
    </div>
</div>

@code {
    [Parameter]
    public City City { get; set; }

    private int msyFacilities { get; set; } = 0;
    private int msyFacilitiesPercent { get; set; } = 0;

    private int govFacilities { get; set; } = 0;
    private int govFacilitiesPercent { get; set; } = 0;

    private int privateFacilities { get; set; } = 0;
    private int privateFacilitiesPercent { get; set; } = 0;

    private int totalFacilities { get; set; } = 0;

    protected override void OnParametersSet()
    {
        base.OnParametersSet();

        msyFacilities = City.AthleticFacilities.Where(m => m.OwnershipId == 1).Count();
        govFacilities = City.AthleticFacilities.Where(m => m.OwnershipId == 2).Count();
        privateFacilities = City.AthleticFacilities.Where(m => { return m.OwnershipId == 3 || m.OwnershipId == 4; }).Count();
        totalFacilities = msyFacilities + govFacilities + privateFacilities;

        if(totalFacilities != 0)
        {
            msyFacilitiesPercent = msyFacilities * 100 / totalFacilities;
            govFacilitiesPercent = govFacilities * 100 / totalFacilities;
            privateFacilitiesPercent = privateFacilities * 100 / totalFacilities;
        }
    }
}
