@page "/Dashboard/Employees/Add"

@using System.ComponentModel.DataAnnotations

<AuthorizeView Roles="Administrators" Context="authContext">
    <div class="courses-top-menu">
        <h6 class="panel-title">تعریف پرسنل جدید</h6>
    </div>

    <div class="row form-wrapper">
        <div class="col3-5">
            <div class="instructions">
                <p class="mb-3">در این بخش می توانید پرسنل جدیدی را تعریف کنید. با تعریف پرسنل جدید یک حساب کاربری برای فرد مذکور ساخته می شود. نام کاربری و رمزعبور برای کارمند مورد نظر برابر کد ملی او خواهد بود.</p>
                <div class="instruction-item">
                    <div class="icon-title mb-2">
                        <img src="/icons/idcard-blue.svg">
                        <h6>کد ملی:</h6>
                    </div>
                    <p>کد ملی به صورت ده رقمی بدون خط تیره یا علامت دیگری وارد گردد.</p>
                </div>
                <div class="instruction-item">
                    <div class="icon-title mb-2">
                        <img src="/icons/user-blue.svg">
                        <h6>نام</h6>
                        <img src="/icons/group-blue.svg">
                        <h6>نام خانوادگی:</h6>
                    </div>
                    <p>نام و نام خانوادگی به صورت جداگانه در دو فیلد مجزا وارد می گردد.</p>
                </div>
                <div class="instruction-item">
                    <div class="icon-title mb-2">
                        <img src="/icons/genders-blue.svg">
                        <h6>جنسیت:</h6>
                    </div>
                    <p>جنسیت از منوی کشویی تایین می گردد.</p>
                </div>
                <div class="instruction-item">
                    <div class="icon-title mb-2">
                        <img src="/icons/calendar-blue.svg">
                        <h6>تاریخ تولد:</h6>
                    </div>
                    <p>تاریخ تولد به ترتیب از چپ به راست با عدد چهار رقمی سال، عدد دو رقمی ماه و دو رقمی روز که با خط تیره از هم جدا شده باشند ثبت می شود.</p>
                </div>
                <div class="instruction-item">
                    <div class="icon-title mb-2">
                        <img src="/icons/father-blue.svg">
                        <h6>نام پدر:</h6>
                    </div>
                    <p>نام پدر در این فرم الزامی نمی باشد.</p>
                </div>
                <div class="instruction-item">
                    <div class="icon-title mb-2">
                        <img src="/icons/employment-blue.svg">
                        <h6>نوع قرارداد:</h6>
                    </div>
                    <p>عنوان قرارداد پرسنل از طریق منوی کشویی قابل انتخاب خواهد بود.</p>
                </div>
                <div class="instruction-item">
                    <div class="icon-title mb-2">
                        <img src="/icons/badge-blue.svg">
                        <h6>کد پرسنلی:</h6>
                    </div>
                    <p>کد پرسنلی الزامی نمی باشد، بنابراین چنانچه پرسنلی هنوز کد پرسنلی دریافت نکرده باشد می توانید این بخش را خالی بگذارید.</p>
                </div>
            </div>
        </div>
        <div class="col2-5 mb-auto card p-3">
            <EditForm method="post" Model="Employee" OnValidSubmit="AddEmployee" FormName="create" Enhance>
                <DataAnnotationsValidator />
                <ValidationSummary class="text-danger" role="alert" />
                <div class="form-group en mb-3">
                    <label for="seencode" class="form-label">
                        <img src="/icons/idcard.svg" />
                    </label>
                    <InputText id="seencode" @bind-Value="Employee.SeenCode" class="form-control" placeholder="کد ملی" />
                </div>
                <div class="form-group fa mb-3">
                    <label for="firstname" class="form-label">
                        <img src="/icons/user.svg" />
                    </label>
                    <InputText id="firstname" @bind-Value="Employee.FirstName" class="form-control" placeholder="نام" />
                </div>
                <div class="form-group fa mb-3">
                    <label for="lastname" class="form-label">
                        <img src="/icons/group.svg" />
                    </label>
                    <InputText id="lastname" @bind-Value="Employee.LastName" class="form-control" placeholder="نام خانوداگی" />
                </div>
                <div class="form-row">
                    <div class="form-group fa mb-3">
                        <label for="genderid" class="form-label">
                            <img src="/icons/genders.svg" />
                        </label>
                        <InputSelect id="genderid" class="select form-control" @bind-Value="Employee.GenderId">
                            @if (Genders is not null)
                            {
                                foreach (Gender gender in Genders)
                                {
                                    <option value="@gender.Id">@gender.PersianName</option>
                                }
                            }
                        </InputSelect>
                    </div>
                    <div class="form-group en mb-3">
                        <label for="birthdate" class="form-label">
                            <img src="/icons/calendar.svg" />
                        </label>
                        <InputText id="birthdate" @bind-Value="Employee.BirthDate" class="form-control" placeholder="1300-01-01 [تاریخ تولد]" />
                    </div>
                </div>
                <div class="form-group fa mb-3">
                    <label for="fathername" class="form-label">
                        <img src="/icons/father.svg" />
                    </label>
                    <InputText id="fathername" @bind-Value="Employee.FatherName" class="form-control" placeholder="نام پدر" />
                </div>
                <div class="form-row">
                    <div class="form-group fa mb-3">
                        <label for="typeid" class="form-label">
                            <img src="/icons/employment.svg" />
                        </label>
                        <InputSelect id="typeid" class="select form-control" @bind-Value="Employee.TypeId">
                            @if (Employments is not null)
                            {
                                foreach (EmploymentType employment in Employments)
                                {
                                    <option value="@employment.Id">@employment.PersianTitle</option>
                                }
                            }
                        </InputSelect>
                    </div>
                    <div class="form-group en mb-3">
                        <label for="personnelid" class="form-label">
                            <img src="/icons/badge.svg" />
                        </label>
                        <InputText id="personnelid" @bind-Value="Employee.PersonnelId" class="form-control" placeholder="کد پرسنلی" />
                    </div>
                </div>
                <StatusMessage Message="@statusMessage" />
                <button type="submit" class="btn btn-primary w-100">ثبت</button>
            </EditForm>
        </div>
    </div>
</AuthorizeView>

@code {
    private string? statusMessage;

    [SupplyParameterFromForm]
    private Employee Employee { get; set; } = new();

    private AppDbContext context = default!;

    private List<Gender>? Genders;
    private List<EmploymentType>? Employments;

    protected override async Task OnInitializedAsync()
    {
        context = DbFactory.CreateDbContext();

        Genders = await context.Genders.ToListAsync();
        Employments = await context.EmploymentTypes.ToListAsync();
    }

    private async Task AddEmployee()
    {
        var employee = await context.Employees
            .FirstOrDefaultAsync(employee => employee.SeenCode == Employee.SeenCode);
        if (employee is not null)
        {
            statusMessage = $"Error: کاربر با کد ملی {Employee.SeenCode} پیش از این ثبت شده است.";
            return;
        }

        var userAccount = await UserManager.FindByNameAsync(Employee.SeenCode);
        if (userAccount is null)
        {
            var user = Activator.CreateInstance<ApplicationUser>();
            user.UserName = Employee.SeenCode;
            user.Email = string.Format("{0}@reporter.guilan.msy", Employee.SeenCode);
            user.EmailConfirmed = true;

            var result = await UserManager.CreateAsync(user, Employee.SeenCode);
            if (result.Succeeded)
            {
                userAccount = await UserManager.FindByNameAsync(Employee.SeenCode);
                Employee.AccountId = userAccount.Id;
            }
            else
            {
                statusMessage = $"Error: {result.Errors.FirstOrDefault().Description}";
                return;
            }
        }
        else
        {
            var resetPasswordToken = await UserManager.GeneratePasswordResetTokenAsync(userAccount);
            var result = await UserManager.ResetPasswordAsync(userAccount, resetPasswordToken, Employee.SeenCode);
            if (!result.Succeeded)
            {
                statusMessage = $"Error: {result.Errors.FirstOrDefault().Description}";
                return;
            }
        }

        context.Employees.Add(Employee);
        await context.SaveChangesAsync();

        statusMessage = $"{Employee.FirstName} {Employee.LastName} با کد ملی {Employee.SeenCode} به فهرست پرسنل اضافه شد.";
    }
}
