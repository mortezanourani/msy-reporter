@page "/constructionprojects/create"
@using Microsoft.EntityFrameworkCore
@using Reporter.Models
@inject IDbContextFactory<Reporter.Data.AppDbContext> DbFactory
@inject NavigationManager NavigationManager

<PageTitle>Create</PageTitle>

<h1>Create</h1>

<h2>ConstructionProject</h2>
<hr />
<div class="row">
    <div class="col-md-4">
        <EditForm method="post" Model="ConstructionProject" OnValidSubmit="AddConstructionProject" FormName="create" Enhance>
            <DataAnnotationsValidator />
            <ValidationSummary class="text-danger" role="alert"/>
            <div class="mb-3">
                <label for="title" class="form-label">Title:</label> 
                <InputText id="title" @bind-Value="ConstructionProject.Title" class="form-control" /> 
                <ValidationMessage For="() => ConstructionProject.Title" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="cityid" class="form-label">CityId:</label> 
                <InputNumber id="cityid" @bind-Value="ConstructionProject.CityId" class="form-control" /> 
                <ValidationMessage For="() => ConstructionProject.CityId" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="isrenovation" class="form-label">IsRenovation:</label> 
                <InputNumber id="isrenovation" @bind-Value="ConstructionProject.TypeId" class="form-check-input" /> 
                <ValidationMessage For="() => ConstructionProject.TypeId" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="typeid" class="form-label">TypeId:</label> 
                <InputNumber id="typeid" @bind-Value="ConstructionProject.TypeId" class="form-control" /> 
                <ValidationMessage For="() => ConstructionProject.TypeId" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="startyear" class="form-label">StartYear:</label> 
                <InputNumber id="startyear" @bind-Value="ConstructionProject.Year" class="form-control" /> 
                <ValidationMessage For="() => ConstructionProject.Year" class="text-danger" /> 
            </div>        
            <button type="submit" class="btn btn-primary">Create</button>
        </EditForm>
    </div>
</div>

<div>
    <a href="/constructionprojects">Back to List</a>
</div>

@code {
    [SupplyParameterFromForm]
    private ConstructionProject ConstructionProject { get; set; } = new();

    // To protect from overposting attacks, see https://learn.microsoft.com/aspnet/core/blazor/forms/#mitigate-overposting-attacks.
    private async Task AddConstructionProject()
    {
        using var context = DbFactory.CreateDbContext();
        context.ConstructionProjects.Add(ConstructionProject);
        await context.SaveChangesAsync();
        NavigationManager.NavigateTo("/constructionprojects");
    }
}
