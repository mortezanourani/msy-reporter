@page "/Dashboard/Administration/Roles"

@using Microsoft.AspNetCore.Components.QuickGrid

@layout _Layout

@rendermode InteractiveServer

<PageTitle>پنل مدیریت</PageTitle>

<div class="page-top-menu">
    <h6 class="panel-title">ثبت و حذف سمت ها</h6>
</div>
<div class="row form-wrapper">
    <div class="col3-5 mb-0">
        <div class="instructions">
            <p class="mb-0">در فرم مقابل آمار ورزشکاران سازمان یافته بر اساس هر هیات در هر شهرستان مربوط به ماه مشخصی ثبت می شوند.</p>
            <p class="mb-3">بدیهی است که آمار مربوطه معادل تعداد ورزشکاران آقا و خانم بیمه شده از ابتدای ماه تا انتهای همان خواهد بود.</p>
            <div class="instruction-item">
                <div class="icon-title mb-2">
                    <img src="/icons/calendar-blue.svg">
                    <h6>ماه و سال:</h6>
                </div>
                <p>ماه و سال مربوط به آماری که قصد ثبت آن را دارید از دو منوی کشویی در فرم مقابل قابل تنظیم هستند.</p>
                <p>لازم به ذکر است که با توجه به اینکه آمار باید به صورت ماهیانه ثبت گردد لذا دسترسی در بخش سال تنها برای سال جاری و سال گذشته امکان پذیر است.</p>
            </div>
        </div>
    </div>
    <div class="col2-5 mb-auto">
        @if (IdentityRoles is null)
        {
            <Loading CardMode=true />
        }
        else
        {
            <div class="card list-card no-header">
                <div class="card-header p-3 border-bottom">
                    <div class="w-100">
                        <EditForm method="post" Model="Role" OnValidSubmit="AddRole" FormName="edit" class="d-flex flex-row-reverse" Enhance>
                            <div class="form-group en w-100">
                                <label for="rolename" class="form-label">
                                    <img src="/icons/user.svg" />
                                </label>
                                <InputText id="rolename" @bind-Value="Role!.Name" class="form-control" placeholder="Role Name" />
                            </div>
                            <button type="submit" class="btn btn-primary ms-2">
                                <img src="/icons/check.svg" />
                            </button>
                        </EditForm>
                    </div>
                </div>
                <div class="card-body">
                    <div class="table-wrapper">
                        @if (IdentityRoles is not null)
                        {
                            <QuickGrid Items="IdentityRoles.AsQueryable()" Theme="" Class="quickgrid-table en">
                                <PropertyColumn Property="@(role => role.Name)" />
                                <TemplateColumn>
                                    <button class="btn p-0" @onclick="() => DeleteRole(context)">
                                        <img src="/icons/user-remove.svg" />
                                    </button>
                                </TemplateColumn>
                            </QuickGrid>
                        }
                    </div>
                </div>
            </div>
        }
    </div>
</div>

@code {
    [SupplyParameterFromForm]
    private IdentityRole? Role { get; set; } = new();

    private List<IdentityRole>? IdentityRoles;

    protected override async Task OnInitializedAsync()
    {
        await UpdateRoles();
    }

    private async Task UpdateRoles()
    {
        IdentityRoles = await RoleManager.Roles
            .OrderBy(role => role.Name)
            .ToListAsync();

        Role = new();
        StateHasChanged();
        return;
    }

    private async Task AddRole()
    {
        await RoleManager.CreateAsync(Role!);

        await UpdateRoles();
        return;
    }

    private async Task DeleteRole(IdentityRole Role)
    {
        await RoleManager.DeleteAsync(Role!);

        await UpdateRoles();
        return;
    }
}
