@page "/Champions"

@implements IAsyncDisposable

<PageTitle>Champions</PageTitle>

<h2 class="page-title mb-3">مدال آوران و قهرمانان</h2>

<div class="row">
	<div class="col1-3">
		<div class="card cornered1">
			<div class="card-body">
				<div>
					<h6 class="title">مدال آوران استان</h6>
					<h2>@championsCount</h2>
				</div>
				<div>
					<div class="d-flex justify-content-between">
						<p>آقایان:</p>
						<b>@menChampionsCount</b>
					</div>
					<div class="d-flex justify-content-between">
						<p>بانوان:</p>
						<b>@womenChampionsCount</b>
					</div>
				</div>
			</div>
		</div>
	</div>
	<div class="col1-3">
		<div class="card cornered2">
			<div class="card-body">
				<div>
					<h6 class="title">مدال های استان</h6>
					<h2>@championsCount</h2>
				</div>
				<div>
					<div class="d-flex justify-content-between">
						<p>آقایان:</p>
						<b>@menMedalsCount</b>
					</div>
					<div class="d-flex justify-content-between">
						<p>بانوان:</p>
						<b>@womenChampionsCount</b>
					</div>
				</div>
			</div>
		</div>
	</div>
	<div class="col1-3">
		<div class="card cornered3">
			<div class="card-body">
				<div>
					<h6 class="title">مدال های استان</h6>
					<h2>@championsCount</h2>
				</div>
				<div>
					<div class="d-flex justify-content-between">
						<p>طلا:</p>
						<b>@goldMedalsCount</b>
					</div>
					<div class="d-flex justify-content-between">
						<p>نقره:</p>
						<b>@silverMedalsCount</b>
					</div>
					<div class="d-flex justify-content-between">
						<p>برنز:</p>
						<b>@bronzeMedalsCount</b>
					</div>
				</div>
			</div>
		</div>
	</div>
</div>
@code {
	private AppDbContext context = default!;

	private int championsCount;
	private int menChampionsCount;
	private int womenChampionsCount;

	private int medalsCount;
	private int menMedalsCount;
	private int womenMedalsCount;
	private int goldMedalsCount;
	private int silverMedalsCount;
	private int bronzeMedalsCount;

	protected override void OnInitialized()
	{
		context = DbFactory.CreateDbContext();

		var champions = context.Champions
			.Include(champion => champion.Gender);

		championsCount = champions.Count();

		menChampionsCount = champions
			.Count(champion => champion.Gender.Id == 1);

		womenChampionsCount = champions
			.Count(champion => champion.Gender.Id == 2);

		var medals = context.Medals;

		medalsCount = medals.Count();

		menMedalsCount = context.Championships
			.Where(championship => championship.Champions
				.Any(champion => champion.Gender.Id == 1))
			.Count(championship => championship.Medal != null);

		womenMedalsCount = medals
			.Count(medal => medal.Color == "Gold");

		goldMedalsCount = champions
			.Count(champion => champion.Championships
				.Any(championship => championship.Medal.Color == "Gold"));

		silverMedalsCount = champions
			.Count(champion => champion.Championships
				.Any(championship => championship.Medal.Color == "Silver"));

		bronzeMedalsCount = champions
			.Count(champion => champion.Championships
				.Any(championship => championship.Medal.Color == "Bronze"));
	}

	public async ValueTask DisposeAsync() => await context.DisposeAsync();
}
