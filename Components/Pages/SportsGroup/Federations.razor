@page "/SportsGroup/Federations"

@using Microsoft.AspNetCore.Components.QuickGrid

@layout Layout.SportsGroupLayout

<div class="row">
	<div class="col1-3">
		<AllFederationsCard />
	</div>
	<div class="col1-3">
		<ProvinceFederationsCard />
	</div>
	<div class="col1-3">
		<FederationMeetingsCard />
	</div>
</div>
<div class="row">
	<div class="col1-1">
		<CityFederationsCard />
	</div>
</div>

@code {
	private AppDbContext context = default!;

	private int cityId;

	private City? city;
	private List<City> cities = new List<City>();

	private IQueryable<LocalFederation> federations;

	private int activesCount;
	private int presidentsCount;
	private int interimPresidentsCount;

	// private IQueryable<FederationMeeting> federationMeetings;

	private int meetingsCount;
	private int generalMeetingsCount;
	private int electiveMeetingsCount;
	private int extraOrdinaryMeetingsCount;

	protected override void OnInitialized()
	{
		context = DbFactory.CreateDbContext();

		cities = context.Cities.ToList();

		SelectCity();
	}

	private void SelectCity()
	{
		city = cities.FirstOrDefault(city => city.Id == cityId);

		federations = context.LocalFederations
			.Include(federation => federation.City)
			.Include(federation => federation.Federation)
			.Include(federation => federation.LocalFederationPresidents)
			.Where(federation => federation.City!.Id == cityId)
			.OrderBy(federation => federation.Federation.PersianName);

		pagination.TotalItemCountChanged += (sender, eventArgs) => StateHasChanged();
	}

	private PaginationState pagination = new PaginationState { ItemsPerPage = 5 };

	private async Task GoToPageAsync(int pageIndex)
	{
		await pagination.SetCurrentPageIndexAsync(pageIndex);
	}

	private string? PageButtonClass(int pageIndex)
		=> pagination.CurrentPageIndex == pageIndex ? "current" : null;

	private string? AriaCurrentValue(int pageIndex)
		=> pagination.CurrentPageIndex == pageIndex ? "page" : null;
}
