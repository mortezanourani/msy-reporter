@using Microsoft.AspNetCore.Components.QuickGrid

@page "/Facilities/M88"

@layout _Layout

<PageTitle>اماکن ورزشی دولتی</PageTitle>

<div class="row">
    <div class="col2-3">
        <div class="card cornered1 card-double">
            <PrivatesStatusCard />
            <hr class="seperator" />
            <PrivatesPerCapitaStatusCard />
        </div>
    </div>
    <div class="col1-3">
        <PopulationCard />
    </div>
</div>

@if (Cities is null)
{
    <Loading CardMode=true />
}
else
{
    <div class="row">
        <div class="col1-1">
            <div class="card color-card">
                <div class="card-header">
                    <h6 class="title">خلاصه وضعیت اماکن ورزشی شهرستان @City?.PersianName</h6>
                    <InputSelect class="select" @bind-Value="CityId" @bind-Value:after="OnParametersSetAsync">
                        @foreach (City city in Cities!)
                        {
                            <option value="@city.Id">@city.PersianName</option>
                        }
                    </InputSelect>
                </div>
            </div>
        </div>
    </div>

    <div class="row">
        <div class="col1-3">
            <PopulationCard CityId="@CityId"/>
        </div>
        <div class="col2-3">
            <div class="card cornered1 card-double">
                <PrivatesCityStatusCard CityId="@CityId" />
                <hr class="seperator" />
                <PrivatesCityPerCapitaStatusCard CityId="@CityId" />
            </div>
        </div>
    </div>

    <div class="row">
        <div class="col1-1">
            <div class="card">
                <div class="card-body text-center">
                    <NavLink class="small fw-medium" href="/Facilities/M88/List">فهرست اماکن ورزشی وزارت ورزش و جوانان</NavLink>
                </div>
            </div>
        </div>
    </div>
}

@code {
    [Parameter]
    public int CityId { get; set; }

    private City? City;

    private List<City>? Cities;

    protected override async Task OnInitializedAsync()
    {
        using var context = DbFactory.CreateDbContext();

        Cities = await context.Cities
            .Where(city => city.Id != 0)
            .ToListAsync();

        CityId = Cities
            .FirstOrDefault()!.Id;
    }

    protected override async Task OnParametersSetAsync()
    {
        using var context = DbFactory.CreateDbContext();

        City = await context.Cities
            .FirstOrDefaultAsync(c => c.Id == CityId);
    }
}
