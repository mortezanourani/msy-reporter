@page "/Facilities"

@layout _Layout

<PageTitle>اماکن ورزشی</PageTitle>

<FacilitiesStatusCard />

@if (Cities is null)
{
    <Loading CardMode=true />
}
else
{
    <div class="row">
        <div class="col1-1">
            <div class="card color-card">
                <div class="card-header">
                    <h6 class="title">خلاصه وضعیت اماکن ورزشی شهرستان @City?.PersianName</h6>
                    <InputSelect class="select" @bind-Value="CityId" @bind-Value:after="OnParametersSetAsync">
                        @foreach (City city in Cities!)
                        {
                            <option value="@city.Id">@city.PersianName</option>
                        }
                    </InputSelect>
                </div>
            </div>
        </div>
    </div>

    <div class="row">
        <div class="col1-3">
            <FacilitiesCityMsyStatusCard CityId="@CityId" />
        </div>
        <div class="col2-3">
            <div class="card card-double">
                <FacilitiesCityGovernmentalsStatusCard CityId="@CityId" />
                <hr class="seperator" />
                <FacilitiesCityPrivatesStatusCard CityId="@CityId" />
            </div>
        </div>
    </div>
}

@code {
    [Parameter]
    public int CityId { get; set; }

    private City? City;

    private List<City>? Cities;

    protected override async Task OnInitializedAsync()
    {
        using var context = DbFactory.CreateDbContext();

        Cities = await context.Cities
            .Where(city => city.Id != 0)
            .ToListAsync();

        if (Cities != null)
        {
            CityId = Cities.FirstOrDefault()!.Id;
        }
    }


    protected override async Task OnParametersSetAsync()
    {
        using var context = DbFactory.CreateDbContext();

        City = await context.Cities
            .FirstOrDefaultAsync(c => c.Id == CityId);
    }
}
