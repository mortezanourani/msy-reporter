@page "/Federations"

@using Microsoft.AspNetCore.Components.QuickGrid

<PageTitle>Federations</PageTitle>

<h2 class="page-title mb-3">هیات های ورزشی</h2>

<ProvinceFederationsStatusCard />

<div class="card city-federations-card">
	<div class="card-header">
		<h6 class="title">فهرست هیات های ورزشی @city!.PersianName</h6>
		<InputSelect class="select" @bind-Value="cityId" @onclick="SelectCity">
			@foreach (City city in cities!)
			{
				<option value="@city.Id">@city.PersianName</option>
			}
		</InputSelect>
	</div>
	<div class="card-body">
		<div class="federations-list">
			@if (federations is not null)
			{
				<QuickGrid Pagination="pagination" Items="federations" Theme="" Class="federations-table">
					<PropertyColumn Sortable="true" Title="عنوان هیات" Property="@(federation => federation.Federation.PersianName)" />
					@if (cityId != 0)
					{
						<PropertyColumn Title="شهرستان" Property="@(federation => federation.City == null ? "استان" : federation.City.PersianName)" />
						<PropertyColumn Sortable="true" Title="بخش" Property="@(federation => federation.District)" />
					}
					<PropertyColumn Sortable="true" Title="شناسه ملی" Property="@(federation => federation.NationalId)" />
					<PropertyColumn Sortable="true" Title="رئیس / سرپرست" Property="@(federation => federation.LocalFederationPresidents.FirstOrDefault()!.Name)" />
					<PropertyColumn Sortable="true" Title="نوع حکم" Property="@(federation => federation.LocalFederationPresidents.FirstOrDefault()!.IsPresident ? "رئیس" : "سرپرست")" />
					<TemplateColumn>
						<a class="info-link" href="/Federation?Federation=@context.FederationId&City=@context.CityId">
							<span class="material-symbols-rounded">info</span>
						</a>
					</TemplateColumn>
				</QuickGrid>

				<div class="paginator">
					<nav role="navigation">
					@if (pagination.TotalItemCount.HasValue)
					{
						for (var pageIndex = 0; pageIndex <= pagination.LastPageIndex; pageIndex++)
						{
							var capturedIndex = pageIndex;
							<button @onclick="@(() => GoToPageAsync(capturedIndex))"
							class="btn @PageButtonClass(capturedIndex)"
							aria-current="@AriaCurrentValue(capturedIndex)"
							aria-label="@(pageIndex + 1)">
								@(pageIndex + 1)
							</button>
						}
					}
					</nav>
					<div class="total">
						@string.Format("{0} هیات", pagination.TotalItemCount)
					</div>
				</div>
			}
		</div>
	</div>
</div>

@code {
	private AppDbContext context = default!;

	private int cityId;

	private City? city;
	private List<City> cities = new List<City>();

	private IQueryable<LocalFederation> federations;

	private int activesCount;
	private int presidentsCount;
	private int interimPresidentsCount;

	// private IQueryable<FederationMeeting> federationMeetings;

	private int meetingsCount;
	private int generalMeetingsCount;
	private int electiveMeetingsCount;
	private int extraOrdinaryMeetingsCount;

	protected override void OnInitialized()
	{
		context = DbFactory.CreateDbContext();

		cities = context.Cities.ToList();

		SelectCity();
	}

	private void SelectCity()
	{
		city = cities.FirstOrDefault(city => city.Id == cityId);

		federations = context.LocalFederations
			.Include(federation => federation.City)
			.Include(federation => federation.Federation)
			.Include(federation => federation.LocalFederationPresidents)
			.Where(federation => federation.City!.Id == cityId)
			.OrderBy(federation => federation.Federation.PersianName);

		pagination.TotalItemCountChanged += (sender, eventArgs) => StateHasChanged();
	}

	private PaginationState pagination = new PaginationState { ItemsPerPage = 5 };

	private async Task GoToPageAsync(int pageIndex)
	{
		await pagination.SetCurrentPageIndexAsync(pageIndex);
	}

	private string? PageButtonClass(int pageIndex)
		=> pagination.CurrentPageIndex == pageIndex ? "current" : null;

	private string? AriaCurrentValue(int pageIndex)
		=> pagination.CurrentPageIndex == pageIndex ? "page" : null;
}
