@page "/TechnicalDepartment"

@layout Facilities._Layout

<PageTitle>پروژه های عمرانی</PageTitle>

<div class="row">
    <div class="col1-3">
        <ProjectsStatusCard />
    </div>
    <div class="col2-3">
        <div class="card card-double">
            <div class="card empty-card">
            </div>
            <hr class="seperator" />
            <div class="card empty-card">
            </div>
        </div>
    </div>
</div>

@if (Cities is null)
{
    <Loading CardMode=true />
}
else
{
    <div class="row">
        <div class="col1-1">
            <div class="card color-card">
                <div class="card-header">
                    <h6 class="title">وضعیت پروژه های عمرانی شهرستان @City?.PersianName</h6>
                    <InputSelect class="select" @bind-Value="CityId" @bind-Value:after="OnParametersSetAsync">
                        @foreach (City city in Cities!)
                        {
                            <option value="@city.Id">@city.PersianName</option>
                        }
                    </InputSelect>
                </div>
            </div>
        </div>
    </div>

    @if (City is null)
    {
        <Loading CardMode=true />
    }
    else
    {
        <div class="row">
            <div class="col1-2">
                <ProjectsCityCard City=@City />
            </div>
        </div>

        <div class="row">
            <div class="col1-2">
                <ProjectsRuralCityCard City=@City />
            </div>
            <div class="col1-2">
                <ProjectsTypesCityCard City=@City />
            </div>
        </div>
    }
}

@code {
    [Parameter]
    public int CityId { get; set; }

    private City? City;

    private List<City>? Cities;

    protected override async Task OnInitializedAsync()
    {
        using var context = DbFactory.CreateDbContext();

        Cities = await context.Cities
            .Where(city => city.Id != 0)
            .ToListAsync();

        CityId = Cities.FirstOrDefault()!.Id;
    }

    protected override async Task OnParametersSetAsync()
    {
        using var context = DbFactory.CreateDbContext();

        City = await context.Cities
            .FirstOrDefaultAsync(c => c.Id == CityId);
    }
}