// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Reporter.Data;

#nullable disable

namespace Reporter.Data.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250222205856_AppInitialize")]
    partial class AppInitialize
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Reporter.Models.AthleticFacility", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("NEWID()");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float?>("Area")
                        .HasColumnType("real");

                    b.Property<int>("CityId")
                        .HasColumnType("int");

                    b.Property<string>("District")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("GeoTypeId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OwnershipId")
                        .HasColumnType("int");

                    b.Property<string>("Sports")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("StatusId")
                        .HasColumnType("int");

                    b.Property<string>("TelNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TypeId")
                        .HasColumnType("int");

                    b.Property<int?>("UsersGenderId")
                        .HasColumnType("int");

                    b.Property<string>("Zipcode")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CityId");

                    b.HasIndex("GeoTypeId");

                    b.HasIndex("OwnershipId");

                    b.HasIndex("StatusId");

                    b.HasIndex("TypeId");

                    b.HasIndex("UsersGenderId");

                    b.ToTable("AthleticFacilities");
                });

            modelBuilder.Entity("Reporter.Models.Champion", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("NEWID()");

                    b.Property<int>("CityId")
                        .HasColumnType("int");

                    b.Property<int>("GenderId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CityId");

                    b.HasIndex("GenderId");

                    b.ToTable("Champions");
                });

            modelBuilder.Entity("Reporter.Models.Championship", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("NEWID()");

                    b.Property<int?>("AgeGroupId")
                        .HasColumnType("int");

                    b.Property<Guid?>("ChampionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("FederationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Host")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("LevelId")
                        .HasColumnType("int");

                    b.Property<int>("MedalId")
                        .HasColumnType("int");

                    b.Property<string>("Sport")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Year")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AgeGroupId");

                    b.HasIndex("ChampionId");

                    b.HasIndex("FederationId");

                    b.HasIndex("LevelId");

                    b.HasIndex("MedalId");

                    b.ToTable("Championships");
                });

            modelBuilder.Entity("Reporter.Models.ChampionshipMedal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PersianName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ChampionshipMedals");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Gold",
                            PersianName = "طلا"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Silver",
                            PersianName = "نقره"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Bronze",
                            PersianName = "برنز"
                        });
                });

            modelBuilder.Entity("Reporter.Models.City", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PersianName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Cities");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Astara",
                            PersianName = "آستارا"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Astaneh",
                            PersianName = "آستانه اشرفیه"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Amlash",
                            PersianName = "املش"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Anzali",
                            PersianName = "بندر انزلی"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Khomam",
                            PersianName = "خمام"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Rasht",
                            PersianName = "رشت"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Rezvanshahr",
                            PersianName = "رضوانشهر"
                        },
                        new
                        {
                            Id = 8,
                            Name = "Roudbar",
                            PersianName = "رودبار"
                        },
                        new
                        {
                            Id = 9,
                            Name = "Roudsar",
                            PersianName = "رودسر"
                        },
                        new
                        {
                            Id = 10,
                            Name = "Siahkal",
                            PersianName = "سیاهکل"
                        },
                        new
                        {
                            Id = 11,
                            Name = "Shaft",
                            PersianName = "شفت"
                        },
                        new
                        {
                            Id = 12,
                            Name = "Somehsara",
                            PersianName = "صومعه سرا"
                        },
                        new
                        {
                            Id = 13,
                            Name = "Tavalesh",
                            PersianName = "طوالش"
                        },
                        new
                        {
                            Id = 14,
                            Name = "Fouman",
                            PersianName = "فومن"
                        },
                        new
                        {
                            Id = 15,
                            Name = "Lahijan",
                            PersianName = "لاهیجان"
                        },
                        new
                        {
                            Id = 16,
                            Name = "Langaroud",
                            PersianName = "لنگرود"
                        },
                        new
                        {
                            Id = 17,
                            Name = "Masal",
                            PersianName = "ماسال"
                        });
                });

            modelBuilder.Entity("Reporter.Models.CourseParticipant", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("NEWID()");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SeenCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("SportsCourseId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("SportsCourseId");

                    b.ToTable("CourseParticipants");
                });

            modelBuilder.Entity("Reporter.Models.FacilityGeoType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PersianName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("FacilityGeoTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "City",
                            PersianName = "شهری"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Village",
                            PersianName = "روستایی"
                        });
                });

            modelBuilder.Entity("Reporter.Models.FacilityOwnership", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PersianName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("FacilityOwnerships");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Governmental-MSY",
                            PersianName = "دولتی - وزارت ورزش و جوانان"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Governmental-Others",
                            PersianName = "دولتی - سایر ارگان ها"
                        },
                        new
                        {
                            Id = 3,
                            Name = "People-Owned",
                            PersianName = "باشگاه های خصوصی"
                        });
                });

            modelBuilder.Entity("Reporter.Models.FacilityStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PersianName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("FacilityStatuses");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Active",
                            PersianName = "فعال"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Inactive",
                            PersianName = "غیرفعال"
                        });
                });

            modelBuilder.Entity("Reporter.Models.FacilityType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PersianName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("FacilityTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Hall",
                            PersianName = "سرپوشیده"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Land",
                            PersianName = "روباز"
                        });
                });

            modelBuilder.Entity("Reporter.Models.FacilityUsersGender", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PersianName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("FacilityUsersGenders");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Men",
                            PersianName = "آقایان"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Women",
                            PersianName = "بانوان"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Mix",
                            PersianName = "مشترک"
                        });
                });

            modelBuilder.Entity("Reporter.Models.Federation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CityId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NationalId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PersianName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CityId");

                    b.ToTable("Federations");

                    b.HasData(
                        new
                        {
                            Id = new Guid("3755fb94-8003-4afd-99b6-917f0fc58a16"),
                            Name = "اتومبیلرانی و موتورسواری",
                            PersianName = "اتومبیلرانی و موتورسواری"
                        },
                        new
                        {
                            Id = new Guid("77524e80-2f49-47bd-aa00-595055110f9e"),
                            Name = "اسکواش",
                            PersianName = "اسکواش"
                        },
                        new
                        {
                            Id = new Guid("b1c1def3-9c80-489e-a7c6-8a29611e2f81"),
                            Name = "اسکی",
                            PersianName = "اسکی"
                        },
                        new
                        {
                            Id = new Guid("40f23c1f-8eda-46ed-aaa6-0e9ec3221e6d"),
                            Name = "اسکیت",
                            PersianName = "اسکیت"
                        },
                        new
                        {
                            Id = new Guid("814a58c4-0f08-491a-a9c7-e310efc97cce"),
                            Name = "انجمن های ورزش های رزمی",
                            PersianName = "انجمن های ورزش های رزمی"
                        },
                        new
                        {
                            Id = new Guid("aaee973d-149d-4a17-94fe-9e4b2a220688"),
                            Name = "انجمن‌های ورزشی",
                            PersianName = "انجمن‌های ورزشی"
                        },
                        new
                        {
                            Id = new Guid("facdc12d-3f16-4109-b29c-7fcb4271a4a4"),
                            Name = "آمادگی جسمانی",
                            PersianName = "آمادگی جسمانی"
                        },
                        new
                        {
                            Id = new Guid("aa669454-1f8c-47a8-92ca-d848e84b5ddb"),
                            Name = "بدمینتون",
                            PersianName = "بدمینتون"
                        },
                        new
                        {
                            Id = new Guid("0b798ab0-e4e2-4bc5-92d9-eab2c2ce65f1"),
                            Name = "بدنسازی و پرورش اندام",
                            PersianName = "بدنسازی و پرورش اندام"
                        },
                        new
                        {
                            Id = new Guid("f4c8278b-4528-483b-87f0-5324702ef56a"),
                            Name = "بسکتبال",
                            PersianName = "بسکتبال"
                        },
                        new
                        {
                            Id = new Guid("3ea035d1-35a8-4785-a111-4929978be07a"),
                            Name = "بوکس",
                            PersianName = "بوکس"
                        },
                        new
                        {
                            Id = new Guid("312e4b6d-e5a0-431b-a832-01fb038053ee"),
                            Name = "بولینگ، بیلیارد و بولس",
                            PersianName = "بولینگ، بیلیارد و بولس"
                        },
                        new
                        {
                            Id = new Guid("7b8e0ea4-0833-452d-9a14-fb80ccbac5e1"),
                            Name = "پزشکی ورزشی",
                            PersianName = "پزشکی ورزشی"
                        },
                        new
                        {
                            Id = new Guid("b8de8339-0bab-44c2-a8ae-c60ca8596c75"),
                            Name = "تکواندو",
                            PersianName = "تکواندو"
                        },
                        new
                        {
                            Id = new Guid("e7fa8c00-ab13-44ff-8ae0-7b5fffb6a2d4"),
                            Name = "تنیس",
                            PersianName = "تنیس"
                        },
                        new
                        {
                            Id = new Guid("26fe3e3a-7d19-4882-9f0c-3d8ba707e000"),
                            Name = "تنیس روی میز",
                            PersianName = "تنیس روی میز"
                        },
                        new
                        {
                            Id = new Guid("c401c78e-940d-4d31-9f5a-ceed9dce4ba2"),
                            Name = "تیراندازی",
                            PersianName = "تیراندازی"
                        },
                        new
                        {
                            Id = new Guid("42b5b710-dc6d-428a-a406-7917c6364f4f"),
                            Name = "تیراندازی با کمان",
                            PersianName = "تیراندازی با کمان"
                        },
                        new
                        {
                            Id = new Guid("eb58bae5-9f93-40ea-9b1a-7be70fd220f4"),
                            Name = "جودو",
                            PersianName = "جودو"
                        },
                        new
                        {
                            Id = new Guid("569ab01b-69bc-4080-86d3-9dbb27c26c0a"),
                            Name = "چوگان",
                            PersianName = "چوگان"
                        },
                        new
                        {
                            Id = new Guid("d636844c-f497-4866-9dff-af4210687408"),
                            Name = "دو و میدانی",
                            PersianName = "دو و میدانی"
                        },
                        new
                        {
                            Id = new Guid("048d3536-3171-4944-a497-e7f23caf7e6f"),
                            Name = "دوچرخه سواری",
                            PersianName = "دوچرخه سواری"
                        },
                        new
                        {
                            Id = new Guid("677882fa-10c1-4025-8c3a-461c363cdb23"),
                            Name = "ژیمناستیک",
                            PersianName = "ژیمناستیک"
                        },
                        new
                        {
                            Id = new Guid("ddf045dc-828a-4ceb-ba7c-ae6b65b48f15"),
                            Name = "سه گانه",
                            PersianName = "سه گانه"
                        },
                        new
                        {
                            Id = new Guid("e7e84d61-787f-4807-aa55-db5ee52a238f"),
                            Name = "سوارکاری",
                            PersianName = "سوارکاری"
                        },
                        new
                        {
                            Id = new Guid("faa91a6e-c43a-4aff-9f38-435e1872c484"),
                            Name = "شطرنج",
                            PersianName = "شطرنج"
                        },
                        new
                        {
                            Id = new Guid("f821fe9c-a654-4f7e-919c-676d7d600f90"),
                            Name = "شمشیربازی",
                            PersianName = "شمشیربازی"
                        },
                        new
                        {
                            Id = new Guid("31e4e8f8-701d-45ca-a4a6-80c3959ddd0f"),
                            Name = "شنا، شیرجه و واترپلو",
                            PersianName = "شنا، شیرجه و واترپلو"
                        },
                        new
                        {
                            Id = new Guid("057e4da6-250d-4253-b3ad-19136b782fbb"),
                            Name = "فوتبال",
                            PersianName = "فوتبال"
                        },
                        new
                        {
                            Id = new Guid("2df59e1e-31f3-43ab-a728-ce8b1f15a7a7"),
                            Name = "قایقرانی",
                            PersianName = "قایقرانی"
                        },
                        new
                        {
                            Id = new Guid("18f096e9-2885-4f88-8cee-2eb3cc5598fa"),
                            Name = "کاراته",
                            PersianName = "کاراته"
                        },
                        new
                        {
                            Id = new Guid("bdaa867f-d16c-46d7-9441-3037aac689e1"),
                            Name = "کبدی",
                            PersianName = "کبدی"
                        },
                        new
                        {
                            Id = new Guid("7a60ede1-80e8-43ba-b72d-3d2ee9fad950"),
                            Name = "کشتی",
                            PersianName = "کشتی"
                        },
                        new
                        {
                            Id = new Guid("8a82228b-80d6-4f0d-8b50-17518d94920b"),
                            Name = "کونگ فو و هنرهای رزمی",
                            PersianName = "کونگ فو و هنرهای رزمی"
                        },
                        new
                        {
                            Id = new Guid("8986197f-c1d6-4f7a-9c70-d88404eed9e2"),
                            Name = "کوهنوردی و صعود ورزشی",
                            PersianName = "کوهنوردی و صعود ورزشی"
                        },
                        new
                        {
                            Id = new Guid("21e1c089-6443-4fe4-b378-4af0af94ab0d"),
                            Name = "گلف",
                            PersianName = "گلف"
                        },
                        new
                        {
                            Id = new Guid("7d61ed83-5eff-4de3-bc76-6a44e3426a9a"),
                            Name = "نجات غریق و غواصی",
                            PersianName = "نجات غریق و غواصی"
                        },
                        new
                        {
                            Id = new Guid("c91c7cc6-a1d9-49d3-b267-2add49369ce1"),
                            Name = "هاکی",
                            PersianName = "هاکی"
                        },
                        new
                        {
                            Id = new Guid("058c8900-e8ae-4d7d-a564-92c01b52011d"),
                            Name = "هندبال",
                            PersianName = "هندبال"
                        },
                        new
                        {
                            Id = new Guid("bad06b4a-3c66-408f-8d17-cdff795c7c45"),
                            Name = "والیبال",
                            PersianName = "والیبال"
                        },
                        new
                        {
                            Id = new Guid("12691542-5c57-4f96-bb76-6f34c151663f"),
                            Name = "ورزش باستانی و پهلوانی",
                            PersianName = "ورزش باستانی و پهلوانی"
                        },
                        new
                        {
                            Id = new Guid("1fc8442a-107d-4b2e-a75f-5661348ccd44"),
                            Name = "ورزش روستائی و بازی های بومی",
                            PersianName = "ورزش روستائی و بازی های بومی"
                        },
                        new
                        {
                            Id = new Guid("dcbe9968-46ef-4a18-b693-b91e23045087"),
                            Name = "ورزش های بیماریهای خاص",
                            PersianName = "ورزش های بیماریهای خاص"
                        },
                        new
                        {
                            Id = new Guid("5c2b623c-0eed-4dba-aef6-3b0f66a777f7"),
                            Name = "ورزش های جانبازان و توانیابان",
                            PersianName = "ورزش های جانبازان و توانیابان"
                        },
                        new
                        {
                            Id = new Guid("ce8b739c-4a34-407f-86cd-c364e819981b"),
                            Name = "ورزش های نابینایان و کم بینایان",
                            PersianName = "ورزش های نابینایان و کم بینایان"
                        },
                        new
                        {
                            Id = new Guid("3245e223-1c14-4471-ae91-1ca18c6bf097"),
                            Name = "ورزش های ناشنوایان و کم شنوایان",
                            PersianName = "ورزش های ناشنوایان و کم شنوایان"
                        },
                        new
                        {
                            Id = new Guid("81cd2f07-f33f-45fb-bc4f-40a1da7f11e5"),
                            Name = "ورزش های همگانی",
                            PersianName = "ورزش های همگانی"
                        },
                        new
                        {
                            Id = new Guid("58a1cd60-3f0c-41f9-84fc-dd0b82042a7a"),
                            Name = "ورزش های دانش‌آموزی",
                            PersianName = "ورزش های دانش‌آموزی"
                        },
                        new
                        {
                            Id = new Guid("0eab85a4-3b52-41d5-b561-6d0e90c66ee1"),
                            Name = "ورزش های دانشگاهی",
                            PersianName = "ورزش های دانشگاهی"
                        },
                        new
                        {
                            Id = new Guid("6ba4793b-887e-460a-b4b8-5c916153ca19"),
                            Name = "ورزش های کارگری",
                            PersianName = "ورزش های کارگری"
                        },
                        new
                        {
                            Id = new Guid("577aec5e-22f8-4853-9573-a80df8e67374"),
                            Name = "وزنه برداری",
                            PersianName = "وزنه برداری"
                        },
                        new
                        {
                            Id = new Guid("5a7561aa-1ef2-472e-b43a-f9da1d738289"),
                            Name = "ووشو",
                            PersianName = "ووشو"
                        });
                });

            modelBuilder.Entity("Reporter.Models.FederationPresident", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("NEWID()");

                    b.Property<string>("AppointmentDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AppointmentOrder")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BirthDate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("FederationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SeedCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("FederationId");

                    b.ToTable("FederationPresidents");
                });

            modelBuilder.Entity("Reporter.Models.Gender", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PersianName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Genders");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Male",
                            PersianName = "آقایان"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Female",
                            PersianName = "بانوان"
                        });
                });

            modelBuilder.Entity("Reporter.Models.M5BuildingOwnership", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PersianName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("M5BuildingOwnerships");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Owned",
                            PersianName = "تملیکی"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Rented",
                            PersianName = "استیجاری"
                        });
                });

            modelBuilder.Entity("Reporter.Models.M5License", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("NEWID()");

                    b.Property<Guid>("AthleticFicilityId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Company")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateOnly?>("ExpireDate")
                        .HasColumnType("date");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("OwnershipId")
                        .HasColumnType("int");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SeenCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Serial")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateOnly?>("StartDate")
                        .HasColumnType("date");

                    b.Property<int?>("StatusId")
                        .HasColumnType("int");

                    b.Property<int?>("TypeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AthleticFicilityId");

                    b.HasIndex("OwnershipId");

                    b.HasIndex("StatusId");

                    b.HasIndex("TypeId");

                    b.ToTable("M5Licenses");
                });

            modelBuilder.Entity("Reporter.Models.M5LicenseStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PersianName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("M5LicenseStatuses");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Active",
                            PersianName = "فعال"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Expired",
                            PersianName = "منقضی"
                        });
                });

            modelBuilder.Entity("Reporter.Models.M5LicenseType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PersianName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("M5LicenseTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Personal",
                            PersianName = "حقیقی"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Company",
                            PersianName = "حقوقی"
                        });
                });

            modelBuilder.Entity("Reporter.Models.M88Contract", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("NEWID()");

                    b.Property<Guid>("AthleticFacilityId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateOnly>("ExpireDate")
                        .HasColumnType("date");

                    b.Property<Guid?>("M5LicenseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SeenCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Serial")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateOnly>("StartDate")
                        .HasColumnType("date");

                    b.HasKey("Id");

                    b.HasIndex("AthleticFacilityId");

                    b.HasIndex("M5LicenseId");

                    b.ToTable("M88Contracts");
                });

            modelBuilder.Entity("Reporter.Models.SportsCourse", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("NEWID()");

                    b.Property<Guid>("FederationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("GenderId")
                        .HasColumnType("int");

                    b.Property<int>("GradeId")
                        .HasColumnType("int");

                    b.Property<int>("TypeId")
                        .HasColumnType("int");

                    b.Property<string>("Year")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("FederationId");

                    b.HasIndex("GenderId");

                    b.HasIndex("GradeId");

                    b.HasIndex("TypeId");

                    b.ToTable("SportsCourses");
                });

            modelBuilder.Entity("Reporter.Models.SportsCourseGrade", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PersianName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("SportsCourseGrades");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "A",
                            PersianName = "درجه یک"
                        },
                        new
                        {
                            Id = 2,
                            Name = "b",
                            PersianName = "درجه دو"
                        },
                        new
                        {
                            Id = 3,
                            Name = "C",
                            PersianName = "درجه سه"
                        });
                });

            modelBuilder.Entity("Reporter.Models.SportsCourseType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PersianName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("SportsCourseTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Coaching",
                            PersianName = "مربیگری"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Referee",
                            PersianName = "داوری"
                        });
                });

            modelBuilder.Entity("Reporter.Models.TournamentAgeGroup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PersianName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TournamentAgeGroups");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "1",
                            PersianName = "نونهالان"
                        },
                        new
                        {
                            Id = 2,
                            Name = "2",
                            PersianName = "خردسالان"
                        },
                        new
                        {
                            Id = 3,
                            Name = "3",
                            PersianName = "زیر 14 سال"
                        },
                        new
                        {
                            Id = 4,
                            Name = "4",
                            PersianName = "نوجوانان"
                        },
                        new
                        {
                            Id = 5,
                            Name = "5",
                            PersianName = "زیر 23 سال"
                        },
                        new
                        {
                            Id = 6,
                            Name = "6",
                            PersianName = "جوانان"
                        },
                        new
                        {
                            Id = 7,
                            Name = "7",
                            PersianName = "بزرگسالان"
                        },
                        new
                        {
                            Id = 8,
                            Name = "8",
                            PersianName = "پیشکسوتان"
                        });
                });

            modelBuilder.Entity("Reporter.Models.TournamentLevel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PersianName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TournamentLevels");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "1",
                            PersianName = "بین المللی"
                        },
                        new
                        {
                            Id = 2,
                            Name = "2",
                            PersianName = "آسیایی"
                        },
                        new
                        {
                            Id = 3,
                            Name = "3",
                            PersianName = "جهانی"
                        },
                        new
                        {
                            Id = 4,
                            Name = "4",
                            PersianName = "المپیک"
                        },
                        new
                        {
                            Id = 5,
                            Name = "5",
                            PersianName = "المپیک دانشجویان"
                        },
                        new
                        {
                            Id = 6,
                            Name = "6",
                            PersianName = "اوراسیا"
                        },
                        new
                        {
                            Id = 7,
                            Name = "7",
                            PersianName = "کشورهای اسلامی"
                        },
                        new
                        {
                            Id = 8,
                            Name = "8",
                            PersianName = "بازی های آسیایی"
                        },
                        new
                        {
                            Id = 9,
                            Name = "9",
                            PersianName = "ملی"
                        });
                });

            modelBuilder.Entity("Reporter.Models.AthleticFacility", b =>
                {
                    b.HasOne("Reporter.Models.City", "City")
                        .WithMany()
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Reporter.Models.FacilityGeoType", "GeoType")
                        .WithMany()
                        .HasForeignKey("GeoTypeId");

                    b.HasOne("Reporter.Models.FacilityOwnership", "Ownership")
                        .WithMany()
                        .HasForeignKey("OwnershipId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Reporter.Models.FacilityStatus", "Status")
                        .WithMany()
                        .HasForeignKey("StatusId");

                    b.HasOne("Reporter.Models.FacilityType", "Type")
                        .WithMany()
                        .HasForeignKey("TypeId");

                    b.HasOne("Reporter.Models.FacilityUsersGender", "UsersGender")
                        .WithMany()
                        .HasForeignKey("UsersGenderId");

                    b.Navigation("City");

                    b.Navigation("GeoType");

                    b.Navigation("Ownership");

                    b.Navigation("Status");

                    b.Navigation("Type");

                    b.Navigation("UsersGender");
                });

            modelBuilder.Entity("Reporter.Models.Champion", b =>
                {
                    b.HasOne("Reporter.Models.City", "City")
                        .WithMany()
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Reporter.Models.Gender", "Gender")
                        .WithMany()
                        .HasForeignKey("GenderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("City");

                    b.Navigation("Gender");
                });

            modelBuilder.Entity("Reporter.Models.Championship", b =>
                {
                    b.HasOne("Reporter.Models.TournamentAgeGroup", "AgeGroup")
                        .WithMany()
                        .HasForeignKey("AgeGroupId");

                    b.HasOne("Reporter.Models.Champion", null)
                        .WithMany("Championships")
                        .HasForeignKey("ChampionId");

                    b.HasOne("Reporter.Models.Federation", "Federation")
                        .WithMany()
                        .HasForeignKey("FederationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Reporter.Models.TournamentLevel", "Level")
                        .WithMany()
                        .HasForeignKey("LevelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Reporter.Models.ChampionshipMedal", "Medal")
                        .WithMany()
                        .HasForeignKey("MedalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AgeGroup");

                    b.Navigation("Federation");

                    b.Navigation("Level");

                    b.Navigation("Medal");
                });

            modelBuilder.Entity("Reporter.Models.CourseParticipant", b =>
                {
                    b.HasOne("Reporter.Models.SportsCourse", null)
                        .WithMany("Participants")
                        .HasForeignKey("SportsCourseId");
                });

            modelBuilder.Entity("Reporter.Models.Federation", b =>
                {
                    b.HasOne("Reporter.Models.City", "City")
                        .WithMany()
                        .HasForeignKey("CityId");

                    b.Navigation("City");
                });

            modelBuilder.Entity("Reporter.Models.FederationPresident", b =>
                {
                    b.HasOne("Reporter.Models.Federation", null)
                        .WithMany("FederationPresidents")
                        .HasForeignKey("FederationId");
                });

            modelBuilder.Entity("Reporter.Models.M5License", b =>
                {
                    b.HasOne("Reporter.Models.AthleticFacility", "AthleticFicility")
                        .WithMany()
                        .HasForeignKey("AthleticFicilityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Reporter.Models.M5BuildingOwnership", "Ownership")
                        .WithMany()
                        .HasForeignKey("OwnershipId");

                    b.HasOne("Reporter.Models.M5LicenseStatus", "Status")
                        .WithMany()
                        .HasForeignKey("StatusId");

                    b.HasOne("Reporter.Models.M5LicenseType", "Type")
                        .WithMany()
                        .HasForeignKey("TypeId");

                    b.Navigation("AthleticFicility");

                    b.Navigation("Ownership");

                    b.Navigation("Status");

                    b.Navigation("Type");
                });

            modelBuilder.Entity("Reporter.Models.M88Contract", b =>
                {
                    b.HasOne("Reporter.Models.AthleticFacility", "AthleticFacility")
                        .WithMany()
                        .HasForeignKey("AthleticFacilityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Reporter.Models.M5License", "M5License")
                        .WithMany()
                        .HasForeignKey("M5LicenseId");

                    b.Navigation("AthleticFacility");

                    b.Navigation("M5License");
                });

            modelBuilder.Entity("Reporter.Models.SportsCourse", b =>
                {
                    b.HasOne("Reporter.Models.Federation", "Federation")
                        .WithMany()
                        .HasForeignKey("FederationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Reporter.Models.Gender", "Gender")
                        .WithMany()
                        .HasForeignKey("GenderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Reporter.Models.SportsCourseGrade", "Grade")
                        .WithMany()
                        .HasForeignKey("GradeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Reporter.Models.SportsCourseType", "Type")
                        .WithMany()
                        .HasForeignKey("TypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Federation");

                    b.Navigation("Gender");

                    b.Navigation("Grade");

                    b.Navigation("Type");
                });

            modelBuilder.Entity("Reporter.Models.Champion", b =>
                {
                    b.Navigation("Championships");
                });

            modelBuilder.Entity("Reporter.Models.Federation", b =>
                {
                    b.Navigation("FederationPresidents");
                });

            modelBuilder.Entity("Reporter.Models.SportsCourse", b =>
                {
                    b.Navigation("Participants");
                });
#pragma warning restore 612, 618
        }
    }
}
